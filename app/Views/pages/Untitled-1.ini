<section>
  <main role="main" class="container-fluid">
    <div class="home-content">
      <br>
      <div class="custom-card">
        <h2 class="card-title">รายการข้อมูลเครื่องคอมพิวเตอร์</h2>
        <div class="d-flex align-items-center gap-3 flex-wrap">
          <div class="d-flex align-items-center gap-2">
            <div class="input-group" style="width: 550px;">
              <span class="input-group-text" id="basic-addon1">
                <i class="fa-solid fa-magnifying-glass"></i>
              </span>
              <input type="text" id="keywordSearch" class="form-control" placeholder="ค้นหาชื่อผู้ใช้งาน..."
                aria-label="ค้นหา" aria-describedby="basic-addon1">
            </div>
          </div>

          <div class="d-flex align-items-center gap-2">
            <label for="statusFilter" class="mb-0 fw-bold">สถานะเครื่อง</label>
            <select id="statusFilter" class="form-select" style="width: 160px;">
              <option value="">เครื่องทั้งหมด</option>
              <option value="A">ใช้งาน</option>
              <option value="N">ไม่ใช้งาน</option>
            </select>
          </div>

          <div class="d-flex align-items-center gap-2">
            <button type="button" id=resetBtn class="btn btn-success search-btn" style="min-width: 90px;">
              <i class="fas fa-redo"></i> รีเซ็ต
            </button>
          </div>
        </div>
      </div>

      <div class="card-body">
        <div class="table-data">
          <table class="table table-striped table-hover">
            <thead>
              <tr>
                <th style="width: 6%;">PcID</th>
                <th style="width: 10%;">Fristname</th>
                <th style="width: 10%;">ComputerName</th>
                <th style="width: 10%;">UserComputer</th>
                <th style="width: 20%;">ServerTerminal</th>
                <th style="width: 15%;">UserLogin</th>
                <th style="width: 10%;">Location</th>
                <th style="width: 10%;">IP</th>
                <th style="width: 10%;">Status</th>
                <th style="width: 10%;">Branch</th>
                <th style="width: 15%;">Action</th>
                <th style="width: 15%;">Edit</th>
              </tr>
            </thead>

            <tbody id="tableBody"></tbody>

          </table>
        </div>
      
       <div id="loading-spinner" class="text-center my-4">
          <i class="fa-solid fa-spinner fa-spin" style="font-size: 60px; color:rgb(54, 30, 94);"></i>
          <p>กำลังโหลดข้อมูล...</p>
        </div>
        
        <!-- Pagination Controls -->
        <!-- <div class="d-flex justify-content-between align-items-center mt-3">
            <div>
              <button class="btn btn-outline-primary btn-sm" id="firstPage">หน้าแรก</button>
              <button class="btn btn-outline-primary btn-sm" id="prevPage">ก่อนหน้า</button>
              <button class="btn btn-outline-primary btn-sm" id="nextPage">ถัดไป</button>
                <button class="btn btn-outline-primary btn-sm" id="lastPage">หน้าสุดท้าย</button>
              </div>
              <div>
                <span id="paginationInfo" class="fw-bold"></span>
              </div>
            </div>  -->
        <div class="d-flex justify-content-center align-items-center mt-3 gap-2">
          <button id="firstPage" class="btn btn-sm btn-outline-primary">หน้าแรก</button>
          <button id="prevPage" class="btn btn-sm btn-outline-primary">ก่อนหน้า</button>
          <span id="pageInfo" class="fw-bold"></span>
          <button id="nextPage" class="btn btn-sm btn-outline-primary">ถัดไป</button>
          <button id="lastPage" class="btn btn-sm btn-outline-primary">หน้าสุดท้าย</button>
        </div>
      </div>


      <!-- Modal แสดงรายละเอียด -->
      <div class="modal fade" id="pcDetailModal" tabindex="-1" aria-labelledby="pcDetailLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
          <div class="modal-content">
            <div class="modal-header custom-header">
              <h5 class="modal-title" id="pcDetailLabel">รายละเอียดเครื่องคอมพิวเตอร์</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <div class="modal-body" id="pcDetailBody">
              <!-- ข้อมูลจะมาแสดงตรงนี้ -->

              <!-- ตารางเพิ่มเติม -->
              <h6 class="mt-3">ประวัติการใช้งาน / รายละเอียดเพิ่มเติม</h6>
              <table class="table table-striped table-bordered mt-2">
                <thead class="table-primary">
                  <tr>
                    <th>pc_id</th>
                    <th>date_update</th>
                    <th>detail</th>
                    <th>userid</th>
                    <th>last_update</th>
                  </tr>
                </thead>
                <tbody id="pcHistoryTableBody">
                  <!-- ข้อมูลตารางจะถูกเติมด้วย JavaScript -->
                </tbody>
              </table>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ปิด</button>
            </div>
          </div>
        </div>
      </div>


      <!-- Modal แก้ไขข้อมูล -->
      <div class="modal fade" id="editPcModal" tabindex="-1" aria-labelledby="editPcLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editPcLabel">แก้ไขข้อมูลเครื่อง</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
            </div>
            <div class="modal-body">
              <form id="editPcForm">
                <input type="hidden" id="edit_pc_id" name="pc_id">
                <div class="mb-3">
                  <label for="edit_user_name" class="form-label">ชื่อผู้ใช้</label>
                  <input type="text" class="form-control" id="edit_user_name" name="user_name">
                </div>
                <div class="mb-3">
                  <label for="edit_computer_name" class="form-label">ชื่อเครื่อง</label>
                  <input type="text" class="form-control" id="edit_computer_name" name="computer_name">
                </div>
                <div class="mb-3">
                  <label for="edit_login_user" class="form-label">loginUser</label>
                  <input type="text" class="form-control" id="edit_login_user" name="login_user">
                </div>
                <div class="mb-3">
                  <label for="edit_terminal_server" class="form-label">TerminalServer</label>
                  <input type="text" class="form-control" id="edit_terminal_server" name="terminal_server">
                </div>
                <div class="mb-3">
                  <label for="edit_terminal_login" class="form-label">TerminalLogin</label>
                  <input type="text" class="form-control" id="edit_terminal_login" name="terminal_login">
                </div>
                <div class="mb-3">
                  <label for="edit_location" class="form-label">location</label>
                  <input type="text" class="form-control" id="edit_location" name="location">
                </div>
                <div class="mb-3">
                  <label for="edit_band" class="form-label">band</label>
                  <input type="text" class="form-control" id="edit_band" name="band">
                </div>
                <div class="mb-3">
                  <label for="edit_model" class="form-label">Model</label>
                  <input type="text" class="form-control" id="edit_model" name="model">
                </div>
                <div class="mb-3">
                  <label for="edit_ip_address" class="form-label">IPAddress</label>
                  <input type="text" class="form-control" id="edit_ip_address" name="ip_address">
                </div>
                <div class="mb-3">
                  <label for="edit_ram" class="form-label">Ram</label>
                  <input type="text" class="form-control" id="edit_ram" name="ram">
                </div>
                <div class="mb-3">
                  <label for="edit_harddisk" class="form-label">Harddisk</label>
                  <input type="text" class="form-control" id="edit_harddisk" name="harddisk">
                </div>
                 <div class="mb-3">
                  <label for="edit_cpu" class="form-label">cpu</label>
                  <input type="text" class="form-control" id="edit_cpu" name="cpu">
                </div>
                <div class="mb-3">
                  <label for="edit_os" class="form-label">OS</label>
                  <input type="text" class="form-control" id="edit_os" name="os">
                </div>
                 <div class="mb-3">
                  <label for="edit_office" class="form-label">Office</label>
                  <input type="text" class="form-control" id="edit_office" name="office">
                </div>
                 <div class="mb-3">
                  <label for="edit_solfware" class="form-label">solfware</label>
                  <input type="text" class="form-control" id="edit_solfware" name="solfware">
                </div>
                 <div class="mb-3">
                  <label for="edit_printer" class="form-label">Printer</label>
                  <input type="text" class="form-control" id="edit_printer" name="printer">
                </div>
                 <div class="mb-3">
                  <label for="edit_printer_share_name" class="form-label">PrinterShareName</label>
                  <input type="text" class="form-control" id="edit_printer_share_name" name="printer_share_name">
                </div>
                 <div class="mb-3">
                  <label for="edit_outlet_port" class="form-label">OutletPort</label>
                  <input type="text" class="form-control" id="edit_outlet_port" name="outlet_port">
                </div>
                <div class="mb-3">
                  <label for="edit_use_status" class="form-label">UseStatus</label>
                  <input type="text" class="form-control" id="edit_use_status" name="use_status">
                </div>
                <div class="mb-3">
                  <label for="edit_remark" class="form-label">Remark</label>
                  <input type="text" class="form-control" id="edit_remark" name="remark">
                </div>
                <div class="mb-3">
                  <label for="edit_br_no" class="form-label">brNo</label>
                  <input type="text" class="form-control" id="edit_br_no" name="br_no">
                </div>
                <div class="mb-3">
                  <label for="edit_serial_no" class="form-label">SerialNo</label>
                  <input type="text" class="form-control" id="edit_serial_no" name="serial_no">
                </div>
                <div class="mb-3">
                  <label for="edit_buy_date" class="form-label">BuyDate</label>
                  <input type="text" class="form-control" id="edit_buy_date" name="buy_date">
                </div>
                 <div class="mb-3">
                  <label for="edit_property_code" class="form-label">PropertyCode</label>
                  <input type="text" class="form-control" id="edit_property_code" name="property_code">
                </div>
                <div class="mb-3">
                  <label for="edit_property_type" class="form-label">PropertyType</label>
                  <input type="text" class="form-control" id="edit_property_type" name="property_type">
                </div>
                <div class="mb-3">
                  <label for="edit_monitor" class="form-label">Monitor</label>
                  <input type="text" class="form-control" id="edit_monitor" name="monitor">
                </div> 
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
              <button type="submit" class="btn btn-primary" form="editPcForm">บันทึก</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</section>

<script>

// สำหรับการโหลดข้อมูล PC และแสดงในตาราง
document.addEventListener("DOMContentLoaded", function () {
  const spinner = document.getElementById("loading-spinner");
  const tbody = document.getElementById('tableBody');
  const searchInput = document.getElementById('keywordSearch');
  const statusFilter = document.getElementById('statusFilter');
  const resetBtn = document.getElementById('resetBtn');
  const apiBaseUrl = '/api-pc';
  const searchUrlstatus = '/api-pc/searchstatus';
  const historyUrl = '/api-pc/history';
  const editForm = document.getElementById('editPcForm');
  let currentPage = 1;
  const limit = 50;
  let totalPages = 1;

  // ฟังก์ชันโหลดข้อมูล PC (รองรับค้นหา/กรอง/เปลี่ยนหน้า)
  async function fetchPCs({ page = 1, keyword = '', status = '' } = {}) {
    spinner.style.display = "block";
    tbody.innerHTML = "";
    let url = (keyword || status)
      ? `${searchUrlstatus}?page=${page}&limit=${limit}&status=${encodeURIComponent(status)}&keyword=${encodeURIComponent(keyword)}`
      : `${apiBaseUrl}?page=${page}&limit=${limit}`;
    try {
      const res = await fetch(url, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' }
      });
      if (!res.ok) throw new Error(`HTTP Error: ${res.status}`);
      const result = await res.json();
      spinner.style.display = "none";
      if (result.status === 'success') {
        tbody.innerHTML = "";
        result.data.forEach(addTableRow);
        currentPage = result.page;
        totalPages = result.totalPages;
        updatePaginationInfo();
      } else {
        tbody.innerHTML = `<tr><td colspan="12" class="text-center">ไม่พบข้อมูล</td></tr>`;
      }
    } catch (err) {
      spinner.style.display = "none";
      toastr.error(err.message || 'เกิดข้อผิดพลาดในการโหลดข้อมูล', 'Error');
    }
  }

  // อัปเดตสถานะปุ่มและ info หน้า
  function updatePaginationInfo() {
    document.getElementById("pageInfo").textContent = `หน้า ${currentPage} / ${totalPages}`;
    document.getElementById("firstPage").disabled = (currentPage === 1);
    document.getElementById("prevPage").disabled = (currentPage === 1);
    document.getElementById("nextPage").disabled = (currentPage === totalPages);
    document.getElementById("lastPage").disabled = (currentPage === totalPages);
  }

  // Event: Pagination
  document.getElementById("firstPage").addEventListener("click", () => {
    if (currentPage > 1) fetchPCs({ page: 1, keyword: searchInput.value, status: statusFilter.value });
  });
  document.getElementById("prevPage").addEventListener("click", () => {
    if (currentPage > 1) fetchPCs({ page: currentPage - 1, keyword: searchInput.value, status: statusFilter.value });
  });
  document.getElementById("nextPage").addEventListener("click", () => {
    if (currentPage < totalPages) fetchPCs({ page: currentPage + 1, keyword: searchInput.value, status: statusFilter.value });
  });
  document.getElementById("lastPage").addEventListener("click", () => {
    if (currentPage < totalPages) fetchPCs({ page: totalPages, keyword: searchInput.value, status: statusFilter.value });
  });

  // Event: ค้นหา/กรอง/รีเซ็ต
  searchInput.addEventListener('input', () => fetchPCs({ page: 1, keyword: searchInput.value, status: statusFilter.value }));
  statusFilter.addEventListener('change', () => fetchPCs({ page: 1, keyword: searchInput.value, status: statusFilter.value }));
  resetBtn.addEventListener("click", () => {
    searchInput.value = "";
    statusFilter.value = "";
    fetchPCs({ page: 1 });
  });

  // สร้างแถวในตาราง
  function addTableRow(pc) {
    const row = document.createElement("tr");
    const statusBadge = pc.use_status === 'A'
      ? '<span class="badge bg-success">ใช้งาน</span>'
      : '<span class="badge bg-danger">ไม่ใช้งาน</span>';
    row.innerHTML = `
      <td>${pc.pc_id || '-'}</td>
      <td>${pc.user_name || '-'}</td>
      <td>${pc.computer_name || '-'}</td>
      <td>${pc.login_user || '-'}</td>
      <td>${pc.terminal_server || '-'}</td>
      <td>${pc.terminal_login || '-'}</td>
      <td>${pc.location || '-'}</td>
      <td>${pc.ip_address || '-'}</td>
      <td>${statusBadge}</td>
      <td>${pc.br_no || '-'}</td>
      <td><button class="btn btn-outline-info btn-sm view-btn" data-id="${pc.pc_id}"><i class="fa-solid fa-eye"></i></button></td>
      <td><button class="btn btn-outline-warning btn-sm edit-btn ms-1" data-id="${pc.pc_id}"><i class="fa-solid fa-pen-to-square"></i></button></td>
    `;
    tbody.appendChild(row);
  }

  // Map ข้อมูลเข้า form edit
  function fillEditForm(pc) {
    const map = [
      'pc_id','user_name','computer_name','login_user','terminal_server','terminal_login','location','band','model','ip_address','ram','harddisk','cpu','os','office','solfware','printer','printer_share_name','outlet_port','use_status','remark','br_no','serial_no','buy_date','property_code','property_type','monitor'
    ];
    map.forEach(key => {
      const el = document.getElementById('edit_' + key);
      if (el) el.value = pc[key] || '';
    });
  }

  // Event delegation: รายละเอียด/แก้ไข
  tbody.addEventListener("click", function (event) {
    const viewBtn = event.target.closest(".view-btn");
    if (viewBtn) {
      fetchPCDetail(viewBtn.getAttribute("data-id"));
      return;
    }
    const editBtn = event.target.closest(".edit-btn");
    if (editBtn) {
      fetch(`/api-pc/${editBtn.getAttribute("data-id")}`)
        .then(res => res.json())
        .then(result => {
          if (result.status === 'success') {
            fillEditForm(result.data);
            new bootstrap.Modal(document.getElementById("editPcModal")).show();
          } else {
            alert("ไม่พบข้อมูล");
          }
        })
        .catch(() => alert("โหลดข้อมูลผิดพลาด"));
    }
  });


  // Event: บันทึกข้อมูลแก้ไข
  editForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    const pcId = document.getElementById("edit_pc_id").value;
    const formData = new FormData(editForm);
    const data = {};
    formData.forEach((value, key) => { data[key] = value; });
    try {
      const res = await fetch(`/api-pc/${pcId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await res.json();
      if (result.status === 'success') {
        toastr.success('บันทึกข้อมูลสำเร็จ');
        bootstrap.Modal.getInstance(document.getElementById("editPcModal")).hide();
        fetchPCs({ page: currentPage, keyword: searchInput.value, status: statusFilter.value });
      } else {
        toastr.error(result.message || 'บันทึกไม่สำเร็จ');
      }
    } catch (err) {
      toastr.error(err.message || 'เกิดข้อผิดพลาด', 'Error');
    }
  });

  // ดึงรายละเอียด PC
  async function fetchPCDetail(pcId) {
    try {
      const res = await fetch(`${apiBaseUrl}/${pcId}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' }
      });
      if (!res.ok) throw new Error(`ไม่สามารถโหลดรายละเอียด PC ${pcId}`);
      const result = await res.json();
      if (result.status === 'success') {
        document.getElementById("pcDetailBody").innerHTML = renderDetailHTML(result.data);
    
        new bootstrap.Modal(document.getElementById("pcDetailModal")).show();
      } else {
        toastr.error('ไม่พบข้อมูล', 'warning');
      }
    } catch (err) {
      toastr.error(err.message || 'เกิดข้อผิดพลาดในการโหลดข้อมูล', 'Error');
    }
  }

  // Render HTML รายละเอียด
  function renderDetailHTML(pc) {
    return `
      <ul class="list-group">
        <li class="list-group-item"><strong>PC ID:</strong> ${pc.pc_id}</li>
        <li class="list-group-item"><strong>ชื่อผู้ใช้:</strong> ${pc.user_name}</li>
        <li class="list-group-item"><strong>ชื่อเครื่อง:</strong> ${pc.computer_name}</li>
        <li class="list-group-item"><strong>Login-User:</strong> ${pc.login_user}</li>
        <li class="list-group-item"><strong>สถานที่:</strong> ${pc.terminal_server}</li>
        <li class="list-group-item"><strong>Terminal Login:</strong> ${pc.terminal_login}</li>
        <li class="list-group-item"><strong>สถานที่:</strong> ${pc.location}</li>
        <li class="list-group-item"><strong>ยี่ห้อ:</strong> ${pc.band}</li>
        <li class="list-group-item"><strong>รุ่น:</strong> ${pc.model}</li>
        <li class="list-group-item"><strong>IP:</strong> ${pc.ip_address}</li>
        <li class="list-group-item"><strong>RAM:</strong> ${pc.ram}</li>
        <li class="list-group-item"><strong>Harddisk:</strong> ${pc.harddisk}</li>
        <li class="list-group-item"><strong>CPU:</strong> ${pc.cpu}</li>
        <li class="list-group-item"><strong>OS:</strong> ${pc.os}</li>
        <li class="list-group-item"><strong>Office:</strong> ${pc.office}</li>
        <li class="list-group-item"><strong>Software:</strong> ${pc.software}</li>
        <li class="list-group-item"><strong>Printer:</strong> ${pc.printer}</li>
        <li class="list-group-item"><strong>Printer-share:</strong> ${pc.printer_share_name}</li>
        <li class="list-group-item"><strong>Outlet:</strong> ${pc.outlet_port}</li>
        <li class="list-group-item"><strong>สถานะเครื่อง:</strong> ${pc.use_status === 'A' ? '<span class="badge bg-success">ใช้งาน</span>' : '<span class="badge bg-danger">ไม่ใช้งาน</span>'}</li>
        <li class="list-group-item"><strong>หมายเหตุ:</strong> ${pc.remark}</li>
        <li class="list-group-item"><strong>สาขา:</strong> ${pc.br_no}</li>
        <li class="list-group-item"><strong>serial:</strong> ${pc.serial_no}</li>
        <li class="list-group-item"><strong>วันที่ซื้อ:</strong> ${pc.buy_date}</li>
        <li class="list-group-item"><strong>Property-code:</strong> ${pc.property_code}</li>
        <li class="list-group-item"><strong>Property-type:</strong> ${pc.property_type}</li>
        <li class="list-group-item"><strong>จอ:</strong> ${pc.monitor}</li>
      </ul>
    `;
  }


  
  // โหลดข้อมูลเมื่อเปิดหน้า
  fetchPCs();
});
</script>





</body>

</html>